@mixin font($size: null, $height: null, $spacing: null, $weight: null) {
    @if $size {
        font-size: calc($size / 16 * 1rem);
    }
    @if $height {
        line-height: calc($height / $size);
    }
    @if $spacing {
        letter-spacing: calc($spacing / 1000 * 1em);
    }
    @if $weight {
        font-weight: $weight;
    }
}

// ブレイクポイントの定義
$breakpoints: (
  'sm': '(max-width: 767px)',  // スマートフォン横向き
  'md': '(min-width: 768px)',  // タブレット
  'lg': '(min-width: 1200px)',  // デスクトップ
) !default;

// メディアクエリmixin
@mixin mq($breakpoint) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

// remのmixin
// 基準となるフォントサイズを設定
$baseFontSize: 16;

// pxをremに変換する関数
@function rem($pxValue) {
  @return calc($pxValue / $baseFontSize) * 1rem;
}

// // 使用例
// .box h1 {
//   font-size: rem(24); // 24pxを16px基準のremに変換
// }

// clamp関数のmixin
@function cal-clamp($min, $max, $min-view-port: 768, $max-view-port: 1000) {
  $valiable-part: calc(($max - $min) / ($max-view-port - $min-view-port));
  $constant: calc(($max - $max-view-port * $valiable-part) / 16);
  $min-rem: calc($min / 16 * 1rem);
  $max-rem: calc($max / 16 * 1rem);
  $variable-rem: calc($constant * 1rem);
  $variable-vw: calc(100 * $valiable-part * 1vw);

  @return clamp($min-rem, $variable-rem + $variable-vw, $max-rem);
}

// // 使用例
// body {
//   font-size: cal-clamp(13, 16);
// }
